{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Twitter Backend Swagger"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer token in the format: Bearer {token}"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "description": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "privacy": {
                  "type": "string",
                  "enum": [
                    "PUBLIC",
                    "PRIVATE"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "409": {
            "description": "User already exists"
          },
          "400": {
            "description": "Validation input error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "Log in a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User signed in successfully"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/follower/follow/{userId}": {
      "post": {
        "description": "Follow a user",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User followed successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "User already followed"
          }
        }
      }
    },
    "/api/follower/unfollow/{userId}": {
      "delete": {
        "description": "Unfollow a user",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User unfollowed successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "User not followed"
          }
        }
      }
    },
    "/api/post": {
      "post": {
        "description": "Create a new post",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "400": {
            "description": "Validation input error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/post": {
      "get": {
        "description": "Get all posts",
        "security": [{
          "Bearer": []
        }],
        "responses": {
          "200": {
            "description": "Posts retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/post/{postId}": {
      "get": {
        "description": "Get a post",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/post/by_user/{userId}": {
      "get": {
        "description": "Get all posts by a user",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Posts retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/reaction/{post_id}": {
      "post": {
        "description": "React to a post",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "reaction": {
                  "type": "string",
                  "enum": [
                    "LIKE",
                    "RETWEET"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post reacted to successfully"
          },
          "400": {
            "description": "Reaction to that post already exists"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/reaction/{post_id}": {
      "delete": {
        "description": "Remove reaction from a post",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Reaction removed successfully"
          },
          "400": {
            "description": "Reaction to that post does not exist"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/reaction/likes/{user_id}": {
      "get": {
        "description": "Get all likes by a user",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Likes retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/reaction/retweets/{user_id}": {
      "get": {
        "description": "Get all retweets by a user",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retweets retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/post/comment/{postId}": {
      "post": {
        "description": "Comment on a post",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Comment created successfully"
          },
          "400": {
            "description": "Validation input error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden, you must follow the user to comment on their post if they have a private account"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/post/comments/{user_id}": {
      "get": {
        "description": "Get all comments by a user",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comments retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/post/comment/{post_id}": {
      "get": {
        "description": "Get all comments on a post",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comments retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/user/upload_profile_image": {
      "post": {
        "description": "Upload a profile image",
        "security": [{
          "Bearer": []
        }],
        "responses": {
          "200": {
            "description": "Url to upload the image granted"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/user/by_username/{username}": {
      "get": {
        "description": "Get a user by their username",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/user/{user_id}": {
      "get": {
        "description": "Get a user by their id",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/user/me": {
      "get": {
        "description": "Get the current user",
        "security": [{
          "Bearer": []
        }],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/user": {
      "delete": {
        "description": "Delete the current user",
        "security": [{
          "Bearer": []
        }],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "description": "Get recommendations",
        "security": [{
          "Bearer": []
        }],
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/user/privacy/{user_id}": {
      "get": {
        "description": "Get a user's privacy setting",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Privacy setting retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/conversation/create/{user_id}": {
      "post": {
        "description": "Create a new conversation",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipient": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Conversation created successfully"
          },
          "400": {
            "description": "Validation input error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Recipient not found"
          }
        }
      }
    },
    "/api/message/{conversation_id}": {
      "get": {
        "description": "Get all messages in a conversation",
        "security": [{
          "Bearer": []
        }],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "description": "Check the health of the API",
        "security": [{
          "Bearer": []
        }],
        "responses": {
          "200": {
            "description": "API is healthy"
          }
        }
      }
    }
  }
}

